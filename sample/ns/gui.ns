import simd
import gpu
import view

struct VertexData {
    position: Float3,
    uv: Float2
}

struct FragmentInput {
    position: Float4,
    uv: Float2,
    color: Float4
}

vertex fn vs_main(data: VertexData) FragmentInput {
    let pos = data.position
    return FragmentInput {
        position: Float4 { x: pos.x, y: pos.y, z: pos.z, w: 1.0 },
        uv: data.uv,
        color: Float4 { x: 1.0, y: 1.0, z: 1.0, w: 1.0 },
    };
}

fragment fn fs_main(data: FragmentInput) Float4 {
    return data.color;
}

fn main() {
    let view = view_create("ns", 800, 600)
    let gpu = gpu_request_device()
    let pipeline = gpu_create_pipeline(gpu, vs_main, fs_main)

    view.on_launch({ view in
    })
}