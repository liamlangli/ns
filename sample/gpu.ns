import std
import io

kernel fn invert(ref input: [u8], ref output: [u8], width: i32, height: i32) {
    if (i > width || j > height) return
    let _i = j * width + i
    output[_i] = 256 - input[_i]
}

fn main() {
    let img = io_read_png('input.png')
    let out = image_t{}
    dispatch(invert, [img.width, img.height, 1], [ref img.pixel, ref out.pixels, img.width, img.height])
    io_save_png('output.png', out.pixels, img.width, img.height, img.channel)
}